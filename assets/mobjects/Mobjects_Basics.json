{
  "Mobjects_Basics_000_Dot.png": "mob = Dot(color = YELLOW)\n",
  "Mobjects_Basics_001_Circle.png": "mob = Circle(fill_opacity=1, fill_color= ORANGE, stroke_color=YELLOW)\n",
  "Mobjects_Basics_002_Annulus.png": "mob = Annulus(inner_radius=0.5, outer_radius=1.2,fill_color= DARK_BLUE, stroke_color=YELLOW, stroke_width=2)\n",
  "Mobjects_Basics_003_Ellipse.png": "mob = Ellipse(color = YELLOW)\n",
  "Mobjects_Basics_004_Sector.png": "mob = Sector(inner_radius=0.5, outer_radius=1.2,fill_color= DARK_BLUE, stroke_color=YELLOW, stroke_width=2)\n",
  "Mobjects_Basics_005_Arc.png": "mob= Arc(radius=1.3, start_angle=-PI/16, angle=PI,color= YELLOW)\n",
  "Mobjects_Basics_006_ArcBetweenPoints.png": "mob= ArcBetweenPoints(start=2 * RIGHT, end=2*LEFT, stroke_color=YELLOW)\n",
  "Mobjects_Basics_007_Line.png": "line = Line(color= YELLOW)\n",
  "Mobjects_Basics_008_DashedLine.png": "mob = DashedLine(color= YELLOW)\n",
  "Mobjects_Basics_009_DashedCircle.png": "circ = Circle(stroke_color=YELLOW)\nmob = DashedVMobject(circ, num_dashes=10)\n",
  "Mobjects_Basics_010_Square.png": "square = Square(color= YELLOW)\n",
  "Mobjects_Basics_011_Rectangle.png": "mob= Rectangle(width=3.5, height=2.0)\n",
  "Mobjects_Basics_012_Rectangle_grid.png": "mob= Rectangle(width=4, height=2.0,grid_xstep=2, grid_ystep=1,color= YELLOW)\n",
  "Mobjects_Basics_013_RoundedRectangle1.png": "mob= RoundedRectangle(corner_radius=0.5, color= YELLOW)\n",
  "Mobjects_Basics_014_RoundedRectangle2.png": "mob = RoundedRectangle(corner_radius=0.8, height=2.2, width=2.2,color= YELLOW)\n",
  "Mobjects_Basics_015_Elbow.png": "Elbow(width=0.5, angle=0*DEGREES,color= YELLOW)\n",
  "Mobjects_Basics_016_RightAngle.png": "line1 = Line( ORIGIN, RIGHT )\nline2 = Line( ORIGIN, UP )\nmob = RightAngle(line1, line2, color=YELLOW, stroke_width=7)\n",
  "Mobjects_Basics_017_Angledot.png": "line1 = Line( LEFT*0.2, RIGHT )\nline2 = Line( DOWN*0.2, UP )\na= Angle(line1, line2, dot=True, color=YELLOW, dot_color=YELLOW)\n",
  "Mobjects_Basics_018_Angle_get_value.png": "line1 = Line((LEFT+(1/3)*UP)*0.1, RIGHT+(1/3)*DOWN)\nline2 = Line((DOWN+(1/3)*RIGHT)*0.1, UP+(1/3)*LEFT)\nangle = Angle(line1, line2, radius=0.3)\nvalue = Integer(angle.get_value(degrees=True), unit=\"^{\\circ}\", color=YELLOW)\nvalue.next_to(angle, UR,buff=0)\n",
  "Mobjects_Basics_019_Triangle.png": "mob = Triangle(color = YELLOW)\n",
  "Mobjects_Basics_020_Cross.png": "Cross(stroke_color = YELLOW)\n",
  "Mobjects_Basics_021_Star.png": "star = Star(color = YELLOW)\n",
  "Mobjects_Basics_022_RegularPolygram5.png": "mob= RegularPolygram(5,color= YELLOW)\n",
  "Mobjects_Basics_023_RegularPolygram6.png": "mob= RegularPolygram(6,color= YELLOW)\n",
  "Mobjects_Basics_024_RegularPolygon5.png": "mob= RegularPolygon(5,color= YELLOW)\n",
  "Mobjects_Basics_025_RegularPolygon6.png": "mob= RegularPolygon(6,color= YELLOW)\n",
  "Mobjects_Basics_026_CutOut.png": "s1 = Square().scale(2.5)\ns2 = Star().shift(LEFT)\ns3 = Circle().shift(RIGHT)\nc = Cutout(s1, s2, s3, fill_opacity=1, color=YELLOW)\n",
  "Mobjects_Basics_027_TwoCircles.png": "mob = Circle(color= YELLOW, fill_opacity=1,stroke_width=0).scale(0.1)\nmob2 = Circle(color= ORANGE, fill_opacity=1,stroke_width=0).scale(0.1)\nx=VGroup(mob,mob2).arrange(RIGHT, buff=-0.1)\n",
  "Mobjects_Basics_028_TwoCirclesIntersection.png": "inter=Intersection(mob, mob2, color=YELLOW, fill_opacity=1,stroke_width=0)\n",
  "Mobjects_Basics_029_TwoCirclesExclusion.png": "ex = Exclusion(mob2, mob, color=YELLOW, fill_opacity=1,stroke_width=0)\n",
  "Mobjects_Basics_030_TwoCirclesDifference.png": "diff = Difference(mob, mob2, color=YELLOW, fill_opacity=1,stroke_width=0)\n",
  "Mobjects_Basics_031_TwoCirclesUnion.png": "uni = Union(mob, mob2, color=YELLOW, fill_opacity=1,stroke_width=0)\n",
  "Mobjects_Basics_032_Arrow.png": "mob = Arrow(color= YELLOW)\n",
  "Mobjects_Basics_033_ArrowSquareTip.png": "mob = Arrow(color= YELLOW, tip_shape=ArrowSquareTip)\n",
  "Mobjects_Basics_034_ArrowSquareFilledTip.png": "mob = Arrow(color= YELLOW, tip_shape=ArrowSquareFilledTip)\n",
  "Mobjects_Basics_035_ArrowCircleTip.png": "mob = Arrow(color= YELLOW, tip_shape=ArrowCircleTip)\n",
  "Mobjects_Basics_036_ArrowCircleFilledTip.png": "mob = Arrow(color= YELLOW, tip_shape=ArrowCircleFilledTip)\n",
  "Mobjects_Basics_037_DoubleArrow.png": "mob = DoubleArrow(color= YELLOW)\n",
  "Mobjects_Basics_038_CurvedArrow.png": "mob = CurvedArrow(LEFT,RIGHT,color= YELLOW)\n",
  "Mobjects_Basics_039_ParametricFunction.png": "mob = ParametricFunction(lambda t: [t,0.2*np.sin(10*t),0],t_range = [-TAU, TAU],color= YELLOW)\n",
  "Mobjects_Basics_040_CubicBezier.png": "p1 = [-3, 1, 0]\n        p1b=  p1 + 5 * RIGHT + 2 * UP\n        p2 = [3, -1, 0]\n        p2b = p2 + 5 * LEFT\n        mob = CubicBezier(p1,p1b, p2b, p2, color=YELLOW)\n        self.add(mob)\n",
  "Mobjects_Basics_041_Brace.png": "mob = Brace(LEFT,RIGHT,color= YELLOW)\n",
  "Mobjects_Basics_042_BraceLabel.png": "l=Line(ORIGIN, RIGHT*1.4)\nmob= BraceLabel(l, text= r\"14 \\, \text{cm}\", color= YELLOW, buff=0.1)\nmob.submobjects[1].set_color(YELLOW)\nself.add(VGroup(l,mob).move_to(ORIGIN))\n",
  "Mobjects_Basics_043_ArcBrace.png": "arc = Arc(radius=0.5,start_angle=0,angle=5*PI/6)\nbrace = ArcBrace(arc).set_color(YELLOW)\n",
  "Mobjects_Basics_044_AnnotationDot.png": "mob = AnnotationDot(fill_color=RED)\n",
  "Mobjects_Basics_045_LabeledDot.png": "mob = LabeledDot(Tex(\"42\", color=BLACK), color=YELLOW)\n",
  "Mobjects_Basics_046_ManimBanner.png": "mob = ManimBanner()\n",
  "Mobjects_Basics_047_HTMLBanner.png": "self.camera.background_color = \"#ece6e2\"\nlogo_green = \"#87c2a5\"\nlogo_blue = \"#525893\"\nlogo_red = \"#e07a5f\"\ncircle = Circle(color=logo_green, fill_opacity=1).shift(LEFT)\nsquare = Square(color=logo_blue, fill_opacity=1).shift(UP)\ntriangle = Triangle(color=logo_red, fill_opacity=1).shift(RIGHT)\nlogo = VGroup(triangle, square, circle).scale(1.3)\n",
  "Mobjects_Basics_048_FlyingFramesBanner.png": "# Banner for flyingframes.readthedocs.io\nself.camera.background_color = \"#ece6e2\" \nlogo_green = \"#87c2a5\"\nlogo_blue = \"#525893\"\nlogo_red = \"#e07a5f\"        \nlogo_black = BLACK\nd= Dot(color= logo_green, radius=0.8).shift(UR*0.6)\nl = VGroup(*[Line(color=logo_blue, stroke_width=70/3) for _ in range(0,3)])\nl.arrange(DOWN,buff=0.45).next_to(d, LEFT).shift(0.3*LEFT)\nl[0::2].shift(0.3*RIGHT)\nl.rotate(30*DEGREES, about_point=d.get_center())\narc= Arc(radius=1.0, color= logo_red, start_angle=PI/4, angle=PI, stroke_width=70)\narc.shift(1.75*DOWN+1.15*RIGHT)\n",
  "Mobjects_Basics_049_ImageMobject.png": "mob = ImageMobject(image)\n",
  "Mobjects_Basics_050_ImageMobject_nearest.png": "np.random.seed(41)\na= np.random.randint(0, 255, size=(3, 4))\nimg = ImageMobject(np.uint8(a))\nimg.height = 6\nimg.set_resampling_algorithm(RESAMPLING_ALGORITHMS[\"nearest\"])\n",
  "Mobjects_Basics_051_ImageMobject_cubic.png": "np.random.seed(41)\na= np.random.randint(0, 255, size=(3, 4))\nimg = ImageMobject(np.uint8(a))\nimg.height = 6\nimg.set_resampling_algorithm(RESAMPLING_ALGORITHMS[\"cubic\"])\n",
  "Mobjects_Basics_052_SVGMobject.png": "mob = SVGMobject(\"svg_logo.svg\")\nself.add(mob)\n",
  "Mobjects_Basics_053_Matrix.png": "mob = Matrix([[9, 3], [1, 5]])\nbra = mob.get_brackets()\nbra.set_color(YELLOW)\n",
  "Mobjects_Basics_054_Matrix_SurroundingRectangle.png": "mob = Matrix([[\"\\pi\", 3], [1, 5]])\nmob.add(SurroundingRectangle(mob.get_columns()[1]))\n",
  "Mobjects_Basics_055_MobjectMatrix.png": "a = Circle(color=YELLOW).scale(0.3)\nb = Square().scale(0.3)\nc = MathTex(\"\\pi\").scale(2)\nd = Star(color=YELLOW).scale(0.3)\nmob = MobjectMatrix([[a, b], [c, d]])\n",
  "Mobjects_Basics_056_Matrix_bracket.png": "mob = Matrix([[2, 0, 4], [-1, 1, 5]],\n            v_buff=0.8,\n            h_buff=0.8,\n            bracket_h_buff=SMALL_BUFF,\n            bracket_v_buff=SMALL_BUFF,\n            left_bracket=\"\\{\",\n            right_bracket=\"\\}\")\nmob.set_row_colors(YELLOW, YELLOW)\n",
  "Mobjects_Basics_057_Table_add_highlighted_cell.png": "mob = Table(\n            [[\"12\", \"200\"],\n            [\"55\",\"393\"]], include_outer_lines=True)\n        mob.add_highlighted_cell((1,2), color=YELLOW)    \n        self.add(mob)\n",
  "Mobjects_Basics_058_Code.png": "##### replace ``` with three \" here.\ncode= ```j = 1 \nk = \"Hello\"\n```\nrendered_code = Code(code=code, background_stroke_color= WHITE, tab_width=2, background=\"window\",\n                    language=\"Python\", font=\"Monospace\").scale(4)\n",
  "Mobjects_Basics_059_NumberPlane.png": "number_plane = NumberPlane(\nx_range=[-10, 10, 1],\ny_range=[-10, 10, 1],\nstroke_width=100,\naxis_config = {\n    \"stroke_color\": YELLOW,\n    \"stroke_width\": 20,\n},\nbackground_line_style={\n    \"stroke_color\": GREY,\n    \"stroke_width\": 15,\n    \"stroke_opacity\": 1\n}\n)\nself.add(number_plane)\n",
  "Mobjects_Basics_060_NumberLine.png": "mob = NumberLine(\n    x_range=[-4, 4, 2],\n    length=2,\n    color=YELLOW,\n    include_numbers=True,\n    label_direction=UP,\n)\n",
  "Mobjects_Basics_061_NumberLine_rotation.png": "mob = NumberLine(\n    x_range=[0, 4, 1],\n    length=2,\n    include_tip=True,\n    color=YELLOW,\n    include_numbers=True,\n    rotation=10 * DEGREES,\n)\n",
  "Mobjects_Basics_062_NumberLine_decimal.png": "mob = NumberLine(\n    x_range=[-4, 4, 2.5],\n    length=3,\n    decimal_number_config={\"num_decimal_places\": 2},\n    include_numbers=True,\n)\nmob.numbers[2].set_color(YELLOW)\n",
  "Mobjects_Basics_063_BarChart.png": "vals = [1, 3, 2, 5]\nlabels = [\n    \"foo\",\n    \"bar\",\n    \"foo3\",\n    \"foo2\",\n]\ncolors = [\"#003f5c\", \"#58508d\", \"#bc5090\", \"#ff6361\"]\nbar = BarChart(\n    vals,\n    max_value=max(vals),\n    bar_colors=colors,\n    bar_names=labels,\n    bar_label_scale_val=1,\n)\n",
  "Mobjects_Basics_064_Light_change_default.png": "self.camera.background_color = WHITE\nText.set_default(color=BLACK)\nLine.set_default(color=YELLOW)\nLine.set_default(stroke_width=20)\n\nmob = Text(\"Light Mode\") \nl=Line(2*LEFT,2*RIGHT).next_to(mob,DOWN)\n"
}